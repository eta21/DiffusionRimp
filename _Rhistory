library(DiffusionRimp)
setwd("C:/Users/Etienne/Google Drive/DiffusionR/Rpack - Imputation/DiffusionRimp")
library(DiffusionRimp)
rm(list=ls(all=TRUE))
library(DiffusionRimp)
# Load a simulated dataset.
data(DoubleWell)
x=DoubleWell
plot(x$X_t~x$t,type='l')
data(DoubleWell)
x=DoubleWell
# Define the drift function.
mu <- function(X,t,theta){theta[1]*X*(theta[2]+theta[3]*sin(0.5*pi*t)-X^2)}
# Define starting parameters for the imputation procedure
burns   <-  10000                # Number of updates to burn
updates <-  11000               # Number of updates
theta   <-  c(1,1,1,1)       # Starting parameters
sds     <-  c(0.2,0.2,0.2,0.03)  # Proposal standard deviations
m       <-  10                   # Imputation resolution
model_1 <- RS.impute(x$X_t,x$t,m,theta,sds, diff.type=1, burns, updates, imputation.plot=T)
library(DiffusionRimp)
rm(list=ls(all=TRUE))
library(DiffusionRimp)
# Load a simulated dataset.
data(DoubleWell)
x=DoubleWell
plot(x$X_t~x$t,type='l')
data(DoubleWell)
x=DoubleWell
# Define the drift function.
mu <- function(X,t,theta){theta[1]*X*(theta[2]+theta[3]*sin(0.5*pi*t)-X^2)}
# Define starting parameters for the imputation procedure
burns   <-  10000                # Number of updates to burn
updates <-  11000               # Number of updates
theta   <-  c(1,1,1,1)       # Starting parameters
sds     <-  c(0.2,0.2,0.2,0.03)  # Proposal standard deviations
m       <-  10                   # Imputation resolution
model_1 <- RS.impute(x$X_t,x$t,m,theta,sds, diff.type=1, burns, updates, imputation.plot=F)
library(DiffusionRimp)
example("MOL.density")
library(DiffusionRimp)
example("MOL.density")
MOL.plot(res)
library(DiffusionRimp)
>DiffusionRimp
?DiffusionRimp
example("MOL.density")
?DiffusionRimp
example("BiMOL.density")
example("BiMOL.passage")
library(DiffusionRimp)
example("BiRS.impute")
library(DiffusionRimp)
example("BiMOL.passage")
library(DiffusionRimp)
example("BiMOL.passage")
MOL.plot(res.PDE)
par(mfrow=c(1,1))
MOL.plot(res.PDE)
#===============================================================================
# Bi-cubic diffusion with concentration in the even quadrants.
#===============================================================================
# Define drift and diffusion terms.
mu1   <- function(X,Y){0.5*(1-X^2)*X-1*Y}
mu2   <- function(X,Y){0.5*(1-Y^2)*Y-1*X}
sig11 <- function(X,Y){1.0}
sig22 <- function(X,Y){1.0}
# Parameters of the problem.
Xs    <- 0.5      # Starting X-coordinate
Ys    <- 0.5      # Starting Y-coordinate
t     <- 10       # Final horizon time
Xbar  <- c(-2,2)  # Barriers in X-dim
Ybar  <- c(-2,2)  # Barriers in Y-dim
Nodes <- 51       # How many nodes x nodes (incl. ends)
delt  <- 1/250    # Time step size
res.PDE <- BiMOL.passage(Xs, Ys, t, c(Xbar, Ybar), Nodes, delt)
MOL.plot(res.PDE)
#===============================================================================
# Bi-cubic diffusion with concentration in the even quadrants.
#===============================================================================
# Define drift and diffusion terms.
mu1   <- function(X,Y){0.5*(1-X^2)*X-1*Y}
mu2   <- function(X,Y){0.5*(1-Y^2)*Y-1*X}
sig11 <- function(X,Y){1.0}
sig22 <- function(X,Y){1.0}
# Parameters of the problem.
Xs    <- 0.5      # Starting X-coordinate
Ys    <- 0.5      # Starting Y-coordinate
t     <- 10       # Final horizon time
Xbar  <- c(-2,2)  # Barriers in X-dim
Ybar  <- c(-2,2)  # Barriers in Y-dim
Nodes <- 51       # How many nodes x nodes (incl. ends)
delt  <- 1/250    # Time step size
res.PDE <- BiMOL.passage(Xs, Ys, t, c(Xbar, Ybar), Nodes, delt)
MOL.plot(res.PDE)
library("DiffusionRimp", lib.loc="C:/Program Files/R/R-3.2.3/library")
remove.packages("DiffusionRimp")
install.packages("C:/Users/Etienne/Google Drive/DiffusionR/Rpack - Imputation/DiffusionRimp_0.1.0.tar.gz", repos = NULL, type = "source")
browseVignettes(DiffusionRimp)
library(DiffusionRimp)
browseVignettes(DiffusionRimp)
browseVignettes('DiffusionRimp')
library(DiffusionRimp)
remove.packages("DiffusionRjgqd")
library(DiffusionRimp)
devtools::build_win()
remove.packages("DiffusionRimp")
install.packages("C:/Users/Etienne/Google Drive/DiffusionR/Rpack - Imputation/DiffusionRimp_0.1.0.tar.gz", repos = NULL, type = "source")
example(MOL.density)
example(MOL.passage)
example(BiMOL.passage)
example(BiMOL.density)
library(DiffusionRimp)
